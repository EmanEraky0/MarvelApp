// Generated by view binder compiler. Do not edit!
package com.example.marvelapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.marvelapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMarvelDetailsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageView imgBack;

  @NonNull
  public final ImageView imgMarvel;

  @NonNull
  public final ItemRecycleBinding layComic;

  @NonNull
  public final ItemRecycleBinding layEvent;

  @NonNull
  public final ItemRecycleBinding laySeries;

  @NonNull
  public final ItemRecycleBinding layStories;

  @NonNull
  public final TextView txtDesc;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtTitleDesc;

  @NonNull
  public final TextView txtTitleName;

  private FragmentMarvelDetailsBinding(@NonNull NestedScrollView rootView,
      @NonNull ImageView imgBack, @NonNull ImageView imgMarvel,
      @NonNull ItemRecycleBinding layComic, @NonNull ItemRecycleBinding layEvent,
      @NonNull ItemRecycleBinding laySeries, @NonNull ItemRecycleBinding layStories,
      @NonNull TextView txtDesc, @NonNull TextView txtName, @NonNull TextView txtTitleDesc,
      @NonNull TextView txtTitleName) {
    this.rootView = rootView;
    this.imgBack = imgBack;
    this.imgMarvel = imgMarvel;
    this.layComic = layComic;
    this.layEvent = layEvent;
    this.laySeries = laySeries;
    this.layStories = layStories;
    this.txtDesc = txtDesc;
    this.txtName = txtName;
    this.txtTitleDesc = txtTitleDesc;
    this.txtTitleName = txtTitleName;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMarvelDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMarvelDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_marvel_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMarvelDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgBack;
      ImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.imgMarvel;
      ImageView imgMarvel = ViewBindings.findChildViewById(rootView, id);
      if (imgMarvel == null) {
        break missingId;
      }

      id = R.id.layComic;
      View layComic = ViewBindings.findChildViewById(rootView, id);
      if (layComic == null) {
        break missingId;
      }
      ItemRecycleBinding binding_layComic = ItemRecycleBinding.bind(layComic);

      id = R.id.layEvent;
      View layEvent = ViewBindings.findChildViewById(rootView, id);
      if (layEvent == null) {
        break missingId;
      }
      ItemRecycleBinding binding_layEvent = ItemRecycleBinding.bind(layEvent);

      id = R.id.laySeries;
      View laySeries = ViewBindings.findChildViewById(rootView, id);
      if (laySeries == null) {
        break missingId;
      }
      ItemRecycleBinding binding_laySeries = ItemRecycleBinding.bind(laySeries);

      id = R.id.layStories;
      View layStories = ViewBindings.findChildViewById(rootView, id);
      if (layStories == null) {
        break missingId;
      }
      ItemRecycleBinding binding_layStories = ItemRecycleBinding.bind(layStories);

      id = R.id.txtDesc;
      TextView txtDesc = ViewBindings.findChildViewById(rootView, id);
      if (txtDesc == null) {
        break missingId;
      }

      id = R.id.txtName;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txtTitleDesc;
      TextView txtTitleDesc = ViewBindings.findChildViewById(rootView, id);
      if (txtTitleDesc == null) {
        break missingId;
      }

      id = R.id.txtTitleName;
      TextView txtTitleName = ViewBindings.findChildViewById(rootView, id);
      if (txtTitleName == null) {
        break missingId;
      }

      return new FragmentMarvelDetailsBinding((NestedScrollView) rootView, imgBack, imgMarvel,
          binding_layComic, binding_layEvent, binding_laySeries, binding_layStories, txtDesc,
          txtName, txtTitleDesc, txtTitleName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
